{"version":3,"sources":["theme/GlobalStyleTheme.js","app/theme/DefaultTheme.js","core/UIControl.js","controls/UIPanel.js","app/panels/MainHeader.js","app/panels/MainFooter.js","controls/UIScreen.js","controls/UITextInput.js","controls/UITextArea.js","controls/UILabel.js","controls/UICheckbox.js","controls/UIDropdown.js","app/screens/FormScreen.js","app/screens/TestScreen.js","app/screens/Test02Screen.js","controls/UIImage.js","controls/renderers/UIItemRenderer.js","controls/UIList.js","app/data/appData.js","app/screens/MainScreen.js","controls/UIButton.js","app/App.js","index.js"],"names":["GlobalStyleTheme","this","initialize","DefaultTheme","console","log","initializeStyleProviders","UIControl","props","defaults","isEnabled","state","class","o","constructor","name","Component","UIPanel","_classes","undefined","classes","className","children","MainHeader","MainFooter","UIScreen","UITextInput","placeholder","onInputChange","bind","onInputFocus","onInputBlur","type","value","onChange","onFocus","onBlur","event","target","setState","UITextArea","rows","cols","resize","customtyles","style","UILabel","text","UICheckbox","label","selected","checked","UIDropdown","items","FormScreen","key","child","isLoading","inputs","genderName","optionSelected","onSubmit","preventDefault","index","data","map","itemInput","TestScreen","useState","count","setCount","color","setColor","useEffect","intervalId","setInterval","prevCount","clearInterval","prevColor","onClick","Test02Screen","UIImage","source","width","height","alt","src","propTypes","PropTypes","string","UIItemRenderer","_label","_icon","_accessory","iconLabel","iconSource","accessoryLabel","accessorySource","UIList","onItemClick","e","selectedIndex","item","AppData","id","description","thumb","MainScreen","onListItemClick","dataItems","gap","labelAlignment","iconAlignment","accessoryAlignment","UIButton","icon","join","cursor","onMouseOver","onMouseOut","globalStyleProvider","func","App","isLoggedIn","_theme","appName","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdce8462.chunk.js","sourcesContent":["\r\nimport '../styles/UIButton.css';\r\nimport '../styles/UIPanel.css';\r\nimport '../styles/UIItemRenderer.css';\r\nimport '../styles/UIImage.css';\r\n\r\nclass GlobalStyleTheme\r\n{\r\n    constructor()\r\n    {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize()\r\n    {\r\n\r\n    }\r\n}\r\n\r\nexport default GlobalStyleTheme;","import GlobalStyleTheme from \"../../theme/GlobalStyleTheme\";\r\n\r\nimport \"../../styles/AppStyles.css\";\r\n\r\nclass DefaultTheme extends GlobalStyleTheme\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n\r\n    initialize()\r\n    {\r\n        console.log(\"DefaultTheme.initialize\");\r\n\r\n        this.initializeStyleProviders();\r\n    }\r\n\r\n    initializeStyleProviders()\r\n    {\r\n        console.log(\"DefaultTheme.initializeStyleProviders\");\r\n    }\r\n}\r\n\r\nexport default DefaultTheme;","import React, {Component} from \"react\"\r\n\r\nclass UIControl extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n\r\n        this.defaults = { \r\n            isEnabled: true\r\n        }\r\n\r\n        // merge props into state\r\n        this.state = { ...this.state, ...this.defaults }\r\n\r\n        this.initialize(props);\r\n    }\r\n\r\n    initialize(props)\r\n    {\r\n        \r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div class=\"ui-control\"></div>\r\n        )\r\n    }\r\n\r\n    getType(o) { return o && o.constructor && o.constructor.name }\r\n}\r\n\r\nexport default UIControl;","import React from \"react\"\r\nimport UIControl from \"../core/UIControl\"\r\n\r\nclass UIPanel extends UIControl\r\n{\r\n    initialize(props)\r\n    {\r\n        super.initialize(props);\r\n\r\n        this.state = {\r\n            ...this.state,  // add base states\r\n        }\r\n\r\n        this._classes = (props.classes !== undefined) ? \" \" + props.classes : \"\"\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className={\"ui-panel\" + this._classes} >\r\n                <div className=\"ui-panel-inner\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UIPanel;","import React from \"react\"\r\n\r\nimport UIControl from \"../../core/UIControl\"\r\nimport UIPanel from \"../../controls/UIPanel\"\r\n\r\nclass MainHeader extends UIPanel\r\n{\r\n    initialize(props)\r\n    {\r\n        super.initialize(props)\r\n        \r\n    }\r\n}\r\n\r\nexport default MainHeader;","import React from \"react\"\r\n\r\nimport UIPanel from \"../../controls/UIPanel\"\r\nimport UIControl from \"../../core/UIControl\"\r\n\r\nclass MainFooter extends UIControl\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <UIPanel>\r\n            </UIPanel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainFooter;","import React from \"react\"\r\nimport UIControl from \"../core/UIControl\"\r\n\r\nclass UIScreen extends UIControl\r\n{\r\n    initialize()\r\n    {\r\n        super.initialize();\r\n\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"ui-screen\"></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UIScreen;","import React from \"react\"\r\nimport UIControl from \"../core/UIControl\";\r\n\r\nclass UITextInput extends UIControl\r\n{\r\n    initialize(props)\r\n    {\r\n        super.initialize(props);\r\n\r\n        //console.log(\"UITextInput.initialize.props\", props)\r\n\r\n        this.state = {\r\n            ...this.state,  // add base states\r\n\r\n            name: (props.name) ? props.name : \"default-input\",\r\n            placeholder: (props.placeholder) ? props.placeholder : \"Enter Text\"\r\n        }\r\n        \r\n        // create key for input name\r\n        this.state[this.state.name] = \"\";\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onInputFocus = this.onInputFocus.bind(this);\r\n        this.onInputBlur = this.onInputBlur.bind(this);\r\n    }\r\n\r\n    render() \r\n    {\r\n        let classes = (this.props.classes !== undefined) ? this.props.classes : \"\"\r\n        return (\r\n            <div className={\"ui-text-input \" + classes}>\r\n               <input \r\n                    type=\"text\"\r\n                    className=\"ui-text-input-inner\"\r\n                    name={this.state.name}\r\n                    value={this.state[this.state.name]}\r\n                    placeholder={this.state.placeholder}\r\n                    onChange={this.onInputChange }\r\n                    onFocus={this.onInputFocus }\r\n                    onBlur={this.onInputBlur }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onInputChange(event)\r\n    {\r\n        // console.log(\"onInputChange\",  event.target);\r\n        const {name, value} = event.target; // grab the values from target\r\n        this.setState({\r\n            [name]: value\r\n        })  \r\n\r\n        if (this.props.onChange !== undefined) this.props.onChange({\r\n            event: event,\r\n            name: name,\r\n            value: value\r\n        });\r\n    }\r\n\r\n    onInputFocus(event)\r\n    {\r\n        // console.log(\"onInputFocus\",  event.target.value);\r\n        const {name, value} = event.target; // grab the values from target\r\n\r\n        if (this.props.onFocus !== undefined) this.props.onFocus({\r\n            event: event,\r\n            name: name,\r\n            value: value\r\n        });\r\n    }\r\n\r\n    onInputBlur(event)\r\n    {\r\n        // console.log(\"onInputBlur\",  event.target.value);\r\n        const {name, value} = event.target; // grab the values from target\r\n\r\n        if (this.props.onBlur !== undefined) this.props.onBlur({\r\n            event: event,\r\n            name: name,\r\n            value: value\r\n        });\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n\r\n    }\r\n}\r\n\r\nexport default UITextInput","import React from \"react\"\r\nimport UITextInput from \"./UITextInput\";\r\n\r\nclass UITextArea extends UITextInput\r\n{\r\n    initialize(props)\r\n    {\r\n        super.initialize(props);\r\n\r\n        // console.log(\"UITextArea.initialize.props\", props)\r\n\r\n        this.defaults = {\r\n            className: \"ui-text-area\",\r\n            name: \"DefaultTextArea\",\r\n            placeholder: \"Enter Text\",\r\n            rows: \"8\",\r\n            cols: \"80\",\r\n            resize: false\r\n        }\r\n\r\n        // merge props into state\r\n        this.state = {\r\n            ...this.state,  // add base states\r\n            ...this.defaults,\r\n            ...props\r\n        }\r\n\r\n        this.customtyles = {}\r\n\r\n        if (!this.state.resize) this.customtyles.resize = \"none\"\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className={this.state.className}>\r\n               <textarea \r\n                    style={this.customtyles}\r\n                    className={this.state.className + \"-inner\"}\r\n                    name={this.state.name}\r\n                    value={this.state[this.state.name]}\r\n                    placeholder={this.state.placeholder}\r\n                    rows={this.state.rows}\r\n                    cols={this.state.cols}\r\n                    onChange={this.onInputChange }\r\n                    onFocus={this.onInputFocus }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onInputChange(event)\r\n    {\r\n        super.onInputChange(event)\r\n    }\r\n\r\n    onInputFocus(event)\r\n    {\r\n        super.onInputFocus(event)\r\n    }\r\n}\r\n\r\nexport default UITextArea","import React from \"react\"\r\n\r\nimport UIControl from \"../core/UIControl\"\r\n\r\nclass UILabel extends UIControl\r\n{\r\n    initialize(props)\r\n    {\r\n        super.initialize(props);\r\n\r\n        this.state = {\r\n            ...this.state,  // add base states\r\n\r\n            text: (props.text) ? props.text : \"Default Label\"\r\n        }\r\n\r\n        this._classes = (props.classes !== undefined) ? \" \" + props.classes : \"\"\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className={\"ui-label\" + this._classes}>\r\n                <div className=\"ui-label-inner\">{this.state.text}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UILabel;","import React from \"react\"\r\nimport UIControl from \"../core/UIControl\";\r\n\r\nclass UICheckbox extends UIControl\r\n{\r\n    initialize(props)\r\n    {\r\n        super.initialize(props);\r\n\r\n        //console.log(\"UICheckbox.initialize.props\", props)\r\n\r\n        this.state = {\r\n            ...this.state,  // add base states\r\n\r\n            // type: (props.type) ? props.type : \"checkbox\",\r\n            name: (props.name) ? props.name : \"default-checkbox\",\r\n            label: (props.label) ? props.label : \"default-label\",\r\n            value: (props.value) ? props.value : \"default-value\",\r\n            selected: (props.selected) ? props.selected : false\r\n        }\r\n\r\n        this.state[this.state.name] = props.selected;\r\n\r\n        this._classes = (props.classes !== undefined) ? props.classes : \"\"\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} value\r\n     */\r\n    set isSelected(value) \r\n    {\r\n        this.setState({\r\n            [this.state.name]: value\r\n        })\r\n    }\r\n          \r\n    onChange(event)\r\n    {\r\n        const { type, name, checked, value } = event.target\r\n\r\n        if (type === \"checkbox\")\r\n        {\r\n            this.setState({\r\n                [name]: checked\r\n            })\r\n        }\r\n\r\n        if (this.props.onChange !== undefined) \r\n        {\r\n            this.props.onChange(\r\n            {\r\n                event: event,\r\n                type: type, \r\n                name: name, \r\n                checked: checked, \r\n                value: value\r\n            });\r\n        }\r\n    }\r\n\r\n    render() \r\n    {\r\n        let classes = (this.props.classes !== undefined) ? this.props.classes : \"\"\r\n        if (this.props.type === \"checkbox\")\r\n        {\r\n            return (\r\n                <div className={\"ui-checkbox \" + classes}>\r\n                    <label className=\"ui-checkbox-label\">\r\n                        <input \r\n                            type={this.props.type}\r\n                            className=\"ui-checkbox-input\"\r\n                            name={this.state.name}\r\n                            checked={this.state[this.state.name]}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        {this.state.label}\r\n                    </label>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.props.type === \"radio\") \r\n        {\r\n            return (\r\n                <div className={\"ui-radio \" + classes}>\r\n                    <label className=\"ui-radio-label\">\r\n                        <input \r\n                            type={this.props.type}\r\n                            className=\"ui-radio-input\"\r\n                            name={this.state.name}\r\n                            value={this.state.value}\r\n                            checked={this.props.selected === this.state.value}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        {this.state.label}\r\n                    </label>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return ( <div></div> )\r\n    }\r\n}\r\n\r\nexport default UICheckbox;","import React from \"react\"\r\nimport UIControl from \"../core/UIControl\";\r\n\r\nclass UIDropdown extends UIControl\r\n{\r\n    initialize(props)\r\n    {\r\n        this.state = {\r\n            ...this.state,  // add base states\r\n\r\n            name: (props.name) ? props.name : \"default-checkbox\",\r\n            value: (props.value) ? props.value : \"default-value\",\r\n            selected: (props.selected) ? props.selected : false,\r\n            items: (props.items) ? props.items : [\"item1\", \"item2\"]\r\n        }\r\n\r\n        this.state[this.state.name] = props.selected;\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n\r\n    onChange(event)\r\n    {\r\n        const { name, value } = event.target\r\n\r\n        console.log(\"ONCHANGE\", name, value)\r\n\r\n        this.setState({\r\n            selected: value\r\n        })\r\n\r\n        if (this.props.onChange !== undefined) \r\n        {\r\n            this.props.onChange(\r\n            {\r\n                event: event,\r\n                name: name, \r\n                selected: value\r\n            });\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        let classes = (this.props.classes !== undefined) ? this.props.classes : \"\"\r\n        return (\r\n            <div className={\"ui-dropdown \" + classes}>\r\n                <select \r\n                    className=\"ui-dropdown-select\"\r\n                    name={this.state[this.state.name]}\r\n                    value={this.state.selected}\r\n                    onChange={this.onChange}\r\n                >\r\n                    <option className=\"ui-dropdown-item\" value=\"green\">Green</option>\r\n                    <option className=\"ui-dropdown-item\" value=\"red\">Red</option>\r\n                    <option className=\"ui-dropdown-item\" value=\"blue\">Blue</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UIDropdown","import React from \"react\"\r\nimport UIScreen from \"../../controls/UIScreen\";\r\nimport UITextInput from \"../../controls/UITextInput\";\r\nimport UITextArea from \"../../controls/UITextArea\";\r\nimport UILabel from \"../../controls/UILabel\";\r\nimport UICheckbox from \"../../controls/UICheckbox\";\r\nimport UIDropdown from \"../../controls/UIDropdown\";\r\n\r\nclass FormScreen extends UIScreen\r\n{\r\n    initialize(props)\r\n    {\r\n        super.initialize(props);\r\n\r\n        console.log(\"props\", props);\r\n        \r\n        for (let key in props.children)\r\n        {\r\n            let child = props.children[key];\r\n            console.log(\"child\", child);\r\n            console.log(\"child.type\", child.type);\r\n            console.log(\"child.props\", child.props);\r\n\r\n\r\n        }\r\n\r\n        this.state = {\r\n            ...this.state,\r\n            isLoading: true,\r\n            inputs: [\r\n                { name: \"firstName\", placeholder: \"Please enter your name\" },\r\n                { name: \"lastName\", placeholder: \"Please enter your name\" }\r\n            ],\r\n            genderName: \"Male\",\r\n            optionSelected: \"Male\",\r\n            placeholder: \"Enter Text\",\r\n            onChange: null\r\n        }\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onInputChange(event)\r\n    {\r\n        const { type, value, checked, name } = event\r\n\r\n        // update radio buttons if needed\r\n        if (type === \"radio\" || type === \"checkbox\")\r\n        {\r\n            console.log(\"onInputChange\", name, checked, value)\r\n\r\n            if (type === \"radio\" && this.state.optionSelected !== value)\r\n            {\r\n                this.setState({\r\n                    optionSelected: value\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onSubmit(event)\r\n    {\r\n        console.log(\"onSubmit\", event);\r\n        event.preventDefault();\r\n        \r\n    }\r\n\r\n    render()\r\n    {\r\n        let index = 0;\r\n        const data = this.state.inputs.map((itemInput) => \r\n        {\r\n            itemInput.index = index;\r\n            index++;\r\n            return (\r\n                <UITextInput \r\n                    key={itemInput.index} \r\n                    { ...itemInput } \r\n                    onChange={this.onInputChange}\r\n                />\r\n            )\r\n        });\r\n\r\n        /*\r\n<UILabel \r\n                    text=\"Text Input Field Examples\"\r\n                />\r\n          \r\n        */\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                \r\n                {this.props.children}\r\n\r\n                <UICheckbox \r\n                    type=\"checkbox\"\r\n                    name=\"isFriendly\"\r\n                    label=\"isFriendly\"\r\n                    selected={true}\r\n                    onChange={this.onInputChange}\r\n                />\r\n\r\n                <UICheckbox \r\n                    type=\"radio\"\r\n                    name=\"gender\"\r\n                    label=\"Male\"\r\n                    value=\"Male\"\r\n                    selected={this.state.optionSelected}\r\n                    onChange={this.onInputChange}\r\n                />\r\n\r\n                <UICheckbox \r\n                    type=\"radio\"\r\n                    name=\"gender\"\r\n                    label=\"Female\"\r\n                    value=\"Female\"\r\n                    selected={this.state.optionSelected}\r\n                    onChange={this.onInputChange}\r\n                />\r\n                \r\n                { data }\r\n\r\n                <UITextInput \r\n                    name=\"MyInputArea\"\r\n                    classes=\"my-text-field\"\r\n                    onChange={this.onInputChange}\r\n                />\r\n\r\n                <UITextArea \r\n                    name=\"MyTextArea\"\r\n                    placeholder=\"This is my text area\"\r\n                    onChange={this.onInputChange}\r\n                />\r\n\r\n                <UIDropdown\r\n                    name=\"MySelectBox\"\r\n                />\r\n\r\n                <button>Submit</button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormScreen","import React, { useState, useEffect } from \"react\"\r\n\r\nfunction TestScreen()\r\n{\r\n    const [ count, setCount ] = useState(0) \r\n    const [ color, setColor ] = useState(\"#000000\") \r\n\r\n    function reset()\r\n    {\r\n        setCount(prevCount => 0);\r\n    }\r\n\r\n    // [] - return replaces -> componentDidMount\r\n    useEffect(() => \r\n    {\r\n        const intervalId = setInterval(() => {\r\n            setCount(prevCount => prevCount + 1)\r\n        }, 1000)\r\n\r\n        // return replaces -> componentDidUnmount\r\n        return (() => {\r\n            clearInterval(intervalId)\r\n        })\r\n\r\n    }, []) // empty array means don't watch for any values\r\n\r\n    // watch count value and set color\r\n    useEffect(() => {\r\n        setColor(prevColor => \"#FF8800\");\r\n    }, [count])\r\n\r\n    return (\r\n        <div>\r\n            <div style={{color: color}}>{count}</div>\r\n            <button onClick={reset}>Reset</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestScreen","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\n\r\nfunction Test02Screen()\r\n{\r\n    \r\n    return (<div></div>)\r\n\r\n}\r\n\r\nexport default Test02Screen","import React from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nimport UIControl from \"../core/UIControl\"\r\n\r\nclass UIImage extends UIControl\r\n{\r\n    initialize(props)\r\n    {\r\n        super.initialize(props);\r\n\r\n        // console.log(\"UIImage.initialize.props\", props)\r\n\r\n        const { source, width, height } = props;\r\n\r\n        this.state = {\r\n            ...this.state,  // add base states\r\n\r\n            source: source && source,\r\n            width: width && width,\r\n            height: height && height,\r\n        }\r\n\r\n        this._classes = (props.classes !== undefined) ? \" \" + props.classes : \"\"\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className={\"ui-image\" + this._classes} >\r\n                <img className=\"ui-image-source\" alt=\"\" width={this.state.width} height={this.state.height}\r\n                    src={this.state.source}>\r\n                </img>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUIImage.propTypes = {\r\n    source: PropTypes.string,\r\n    width: PropTypes.string,\r\n    height: PropTypes.string\r\n};\r\n\r\nexport default UIImage;","import React from \"react\"\r\n\r\nimport UIImage from \"../UIImage\"\r\nimport UILabel from \"../UILabel\"\r\nimport UIControl from \"../../core/UIControl\"\r\n\r\n/*\r\n    UIItemRenderer.propTypes = \r\n    {\r\n        className: PropTypes.string,\r\n        label: PropTypes.string,\r\n        iconLabel: PropTypes.string,\r\n        iconSource: PropTypes.any,\r\n        accessoryLabel: PropTypes.string,\r\n        accessorySource: PropTypes.any\r\n    }\r\n    return (\r\n    <UIItemRenderer key={item.index} data={{\r\n        className: (item.className) ? item.className : \"\",\r\n        label: (item.label) ? item.label : undefined,\r\n        iconLabel: (item.iconLabel) ? item.iconLabel : undefined,\r\n        iconSource: (item.iconSource) ? item.iconSource : undefined,\r\n        accessoryLabel: (item.accessoryLabel) ? item.accessoryLabel : undefined,\r\n        accessorySource: (item.accessorySource) ? item.accessorySource : undefined,\r\n        gap: (item.gap) ? item.gap : \"0\",\r\n        labelAlignment: (item.labelAlignment) ? item.labelAlignment : \"left\",\r\n        iconAlignment: (item.iconAlignment) ? item.iconAlignment : \"left\",\r\n        accessoryAlignment: (item.accessoryAlignment) ? item.accessoryAlignment : \"left\",\r\n        onClick: this.onItemClick\r\n    }}/>\r\n)*/\r\n\r\nclass UIItemRenderer extends UIControl\r\n{\r\n    initialize(props)\r\n    {\r\n        super.initialize(props);\r\n\r\n        // console.log(\"UIItemRenderer.initialize.props\", props)\r\n\r\n        this.state = {\r\n            ...this.state,  // add base states\r\n        }\r\n\r\n        this._classes = (props.classes !== undefined) ? \" \" + props.classes : \"\"\r\n        this._label = null;\r\n        this._icon = null;\r\n        this._accessory = null;\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick(event)\r\n    {\r\n        console.log(\"ItemRenderer.onClick\");\r\n\r\n        if (this.props.onClick !== undefined) this.props.onClick({\r\n            index: this.props.index,\r\n            event: event\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        console.log(\"item.componentDidMount()\",this.props);\r\n    }\r\n\r\n    render()\r\n    {\r\n        console.log(\"item.render()\",this.props);\r\n\r\n        // check if we have a text label \r\n        if (this.props.label !== undefined)\r\n        {\r\n            this._label = <UILabel text={this.props.label} />\r\n        }\r\n\r\n        if (this.props.iconLabel !== undefined)\r\n        {\r\n            this._icon = <UILabel text={this.props.iconLabel} />\r\n        }\r\n\r\n        if (this.props.iconSource !== undefined)\r\n        {\r\n            this._icon = <UIImage source={this.props.iconSource} />\r\n        }\r\n        \r\n        if (this.props.accessoryLabel !== undefined)\r\n        {\r\n            this._accessory = <UILabel text={this.props.accessoryLabel} />\r\n        }\r\n\r\n        if (this.props.accessorySource !== undefined)\r\n        {\r\n            this._accessory = <UIImage source={this.props.accessorySource} />\r\n        }\r\n\r\n        return ( \r\n            <div \r\n                className={\"ui-item-renderer\" + this._classes}\r\n                onClick={this.onClick}\r\n            > \r\n                <div className=\"ui-item-renderer-inner\"> \r\n                    { this._icon !== null && this._icon }\r\n                    { this._label !== null && this._label }\r\n                    { this._accessory !== null && this._accessory }\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default UIItemRenderer;","import React from \"react\"\r\nimport UIItemRenderer from \"./renderers/UIItemRenderer\";\r\nimport UIControl from \"../core/UIControl\";\r\n\r\nclass UIList extends UIControl\r\n{\r\n    /*\r\n        Array functions: filter, map, sort, reduce, every, some, find, findIndex\r\n        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/__name\r\n    */\r\n    initialize(props)\r\n    {\r\n        super.initialize(props);\r\n\r\n        console.log(\"UIList.initialize.props\", props)\r\n\r\n        this.state = {\r\n            ...this.state,  // add base states\r\n\r\n            selectedIndex: 0\r\n        }\r\n\r\n        this._classes = (props.classes !== undefined) ? \" \" + props.classes : \"\"\r\n\r\n        //this.onItemClick = this.onItemClick.bind(this);\r\n    }\r\n\r\n    onItemClick = (e) =>\r\n    {\r\n        console.log(\"onItemClick\", e, this.props.index);\r\n\r\n        // const index = this.props.index;\r\n\r\n        // this.setState({selectedIndex:this.props.index})\r\n\r\n        if (this.props.onClick !== undefined) this.props.onClick(e);\r\n    }\r\n\r\n    render()\r\n    {\r\n        // console.log(\"UIList\", this.state.items);\r\n        let index = 0;\r\n        const data = this.props.items.map((item) => \r\n        {\r\n            item.index = index;\r\n            index++;\r\n            return (\r\n                <UIItemRenderer key={item.index} {...item} onClick={this.onItemClick} />\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className={\"ui-list\" + this._classes}>\r\n                {data} \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UIList;\r\n\r\n","const AppData = [\r\n\r\n    {\r\n        id: 1,\r\n        name: \"Product 1\",\r\n        description: \"Product 1 Description\",\r\n        thumb: \"images/prod_swap_card.jpg\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Product 2\",\r\n        description: \"Product 2 Description\",\r\n        thumb: \"images/prod_swap_card.jpg\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Product 3\",\r\n        description: \"Product 3 Description\",\r\n        thumb: \"images/prod_swap_card.jpg\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Product 4\",\r\n        description: \"Product 4 Description\",\r\n        thumb: \"images/prod_swap_card.jpg\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Product 5\",\r\n        description: \"Product 5 Description\",\r\n        thumb: \"images/prod_swap_card.jpg\"\r\n    }\r\n]\r\n\r\nexport default AppData","import React from \"react\"\r\n\r\nimport UIScreen from \"../../controls/UIScreen\";\r\nimport UIList from \"../../controls/UIList\";\r\n\r\nimport dataItems from \"../data/appData\"\r\n\r\nclass MainScreen extends UIScreen\r\n{\r\n    initialize(props)\r\n    {\r\n        super.initialize(props);\r\n\r\n        this.state = {\r\n            ...this.state,\r\n            isLoading: true\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        /*\r\n        fetch(\"https://swapi.co/api/people/1\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"SWApi:\", data)\r\n                this.setState({\r\n                    isLoading: false\r\n                });\r\n            })\r\n        */\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    onListItemClick = (e) => \r\n    {\r\n        console.log(\"onListItemClick\", e.index);\r\n    }\r\n\r\n    render() \r\n    {\r\n        if (this.state.isLoading) \r\n        {\r\n            return (\r\n                <div>Loading Data....</div>\r\n            )\r\n        }\r\n\r\n        const data = dataItems.map((item) => \r\n        {\r\n            let itemData = {\r\n                label: item.name,\r\n                iconSource: item.thumb,\r\n                accessoryLabel: item.description,\r\n                gap: \"10px\",\r\n                labelAlignment: \"left\",\r\n                iconAlignment: \"left\",\r\n                accessoryAlignment: \"left\"\r\n            }\r\n\r\n            return (itemData)\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <UIList \r\n                    items={data} \r\n                    onClick={this.onListItemClick}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainScreen","import React from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nimport UIControl from \"../core/UIControl\"\r\nimport UILabel from \"./UILabel\";\r\nimport UIImage from \"./UIImage\";\r\n\r\n// import defaultStyles from '../styles/UIButton.module.sass';\r\n\r\nclass UIButton extends UIControl\r\n{\r\n    /*const styles = {\r\n            backgroundColor: \"\",\r\n            backgroundHoverColor: \"\",\r\n            backgroundPressedColor: \"\",\r\n            backgroundDisabledColor: \"\",\r\n            \r\n            textColor: \"\",\r\n            textHoverColor: \"\",\r\n            textPressedColor: \"\",\r\n            textDisabledColor: \"\"\r\n    }*/\r\n\r\n    get defaultStyleProvider()\r\n    {\r\n        return UIControl.globalStyleProvider;\r\n    }\r\n\r\n    initialize(props)\r\n    {\r\n        super.initialize(props);\r\n\r\n        console.log(\"Button.initialize\");\r\n\r\n        const { classes, label, icon } = props;\r\n\r\n        this.state = {\r\n            ...this.state,  // add base states\r\n\r\n            label: label && label,\r\n            icon: icon && icon\r\n        }\r\n\r\n        this._classes = (classes && true) ? \" \" + classes : \"\";\r\n        this._label = this.state.label && <UILabel text={this.state.label}/>\r\n        this._icon = this.state.icon && <UIImage source={this.state.icon}/>\r\n\r\n        this._classes = [\r\n            \"ui-button\",\r\n            props.classes\r\n          ].join(' ');\r\n    }\r\n\r\n    render()\r\n    {\r\n        console.log(\"clasess\", this._classes)\r\n        \r\n\r\n          \r\n        return (\r\n            <div className={this._classes}>\r\n                <div className={\"ui-button-inner\"}>\r\n                    <button style={{cursor: \"pointer\"}}\r\n                        onClick={(e) => this.onClick(e)}\r\n                        onMouseOver={(e) => this.onMouseOver(e)}\r\n                        onMouseOut={(e) => this.onMouseOut(e)}\r\n                    >\r\n                        {this._label}\r\n                        {this._icon}\r\n                        {this.props.children}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onClick(e)\r\n    {\r\n        console.log(\"Button Clicked\", e);\r\n        const { onClick } = this.props;\r\n\r\n        onClick && onClick(e);\r\n    }\r\n\r\n    onMouseOut(e)\r\n    {\r\n        console.log(\"Button Out\", e);\r\n        const { onMouseOut } = this.props;\r\n\r\n        onMouseOut && onMouseOut(e);\r\n    }\r\n\r\n    onMouseOver(e)\r\n    {\r\n        console.log(\"Button Over\", e);\r\n        const { onMouseOver } = this.props;\r\n        \r\n        onMouseOver && onMouseOver(e);\r\n    }\r\n}\r\n\r\nUIButton.propTypes = {\r\n    label: PropTypes.string,\r\n    icon: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onMouseOut: PropTypes.func,\r\n    onMouseOver: PropTypes.func\r\n};\r\n\r\nexport default UIButton;\r\n","import React from \"react\"\r\n\r\nimport '../index.css';\r\n\r\nimport DefaultTheme from \"./theme/DefaultTheme\";\r\n\r\nimport MainHeader from \"./panels/MainHeader\"\r\nimport MainFooter from \"./panels/MainFooter\"\r\nimport FormScreen from \"./screens/FormScreen\";\r\nimport TestScreen from \"./screens/TestScreen\";\r\nimport Test02Screen from \"./screens/Test02Screen\";\r\nimport UILabel from \"../controls/UILabel\";\r\nimport MainScreen from \"./screens/MainScreen\";\r\nimport UIButton from \"../controls/UIButton\";\r\nimport UIImage from \"../controls/UIImage\";\r\n\r\n\r\nclass App extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoggedIn: true\r\n        }\r\n\r\n        this._theme = new DefaultTheme();\r\n    }\r\n\r\n    onSignInControl(e)\r\n    {\r\n        this.setState({\r\n            isLoggedIn: !this.state.isLoggedIn\r\n        })\r\n    }\r\n\r\n    onClick(e)\r\n    {\r\n        console.log(\"App-> Button Clicked\", e);\r\n    }\r\n\r\n    render() \r\n    {\r\n        const appName = \"AppTest\"\r\n        const appVersion = \"v1.0.0\"\r\n    \r\n        /*\r\n        return (\r\n            <div className=\"app\">\r\n                <div>Welcome to {appName + \" \" + appVersion}</div>\r\n                <div>{`${appName} ${appVersion}`}</div>\r\n                <button onClick={this.onSignInControl.bind(this)}>You are currently logged  { (this.state.isLoggedIn) ? \"in\" : \"out\" }</button>\r\n            </div>\r\n        )\r\n        */\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <div>Welcome to {appName + \" \" + appVersion}</div>\r\n                <div>{`${appName} ${appVersion}`}</div>\r\n                <div>You are currently logged { (this.state.isLoggedIn) ? \"in\" : \"out\" }</div>\r\n                <MainHeader classes=\"main-header\">\r\n                    <UILabel text=\"React Test Base\" />\r\n                    <UIButton label=\"Rafael\" icon=\"logo512.png\" classes=\"blue\" />\r\n                    <UIButton onClick={(e) => this.onClick(e)} classes=\"red\">\r\n                        <UILabel text={\"Jose\"}/>  \r\n                        <UIImage source={\"logo512.png\"} classes=\"item-icon\" />  \r\n                    </UIButton>\r\n                </MainHeader>\r\n                <Test02Screen />\r\n                <TestScreen />\r\n                <FormScreen>\r\n                    <UILabel text=\"Text Input Field Examples\" />\r\n                    <UILabel text=\"Rafael\" />\r\n                </FormScreen>\r\n                <MainScreen />\r\n                <MainFooter />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import 'react-app-polyfill/ie11';       // For IE 11 Support!\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"./app/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}